<!DOCTYPE html>
<html lang="ja">
<head>
    <meta http-equiv="content-type" content="text/html" charset="UTF-8">
    <title><%=title %></title>
    <link type="text/css" href="/stylesheets/style.css" rel="stylesheet">
</head>
<body>
    <h1><%=title %></h1>
    <p id="lat"></p>
    <p id="lon"></p>
    <p id="alt"></p>
    <p id="speed"></p>
    <p id="count"></p>
<script>
    // Geolocation APIに対応している
if( navigator.geolocation )
{
	// 現在位置を取得できる場合の処理
    alert( "あなたの端末では、現在位置を取得することができます。" ) ;
// グローバル変数
var syncerWatchPosition = {
	count: 0 ,
	lastTime: 0 ,
	map: null ,
	marker: null ,
} ;

// 成功した時の関数
function successFunc( position )
{
	// データの更新
	++syncerWatchPosition.count ;					// 処理回数
	var nowTime = ~~( new Date() / 1000 ) ;	// UNIX Timestamp

	// 前回の書き出しから3秒以上経過していたら描写
	// 毎回HTMLに書き出していると、ブラウザがフリーズするため
	if( (syncerWatchPosition.lastTime + 2) > nowTime )
	{
		return false ;
	}

	// 前回の時間を更新
	syncerWatchPosition.lastTime = nowTime ;

	// HTMLに書き出し
    document.getElementById( 'lat' ).innerHTML = "緯度:" + position.coords.latitude;
    document.getElementById( 'lon' ).innerHTML = "経度:" + position.coords.longitude;
    document.getElementById( 'alt' ).innerHTML = "高度:" + position.coords.altitude;
    document.getElementById( 'speed' ).innerHTML = "速度:" + position.coords.speed;
    document.getElementById( 'count' ).innerHTML = "実行回数" + syncerWatchPosition.count + "回" ;


}

// 失敗した時の関数
function errorFunc( error )
{
	// エラーコードのメッセージを定義
	var errorMessage = {
		0: "原因不明のエラーが発生しました…。" ,
		1: "位置情報の取得が許可されませんでした…。" ,
		2: "電波状況などで位置情報が取得できませんでした…。" ,
		3: "位置情報の取得に時間がかかり過ぎてタイムアウトしました…。" ,
	} ;

	// エラーコードに合わせたエラー内容を表示
	alert( errorMessage[error.code] ) ;
}

// オプション・オブジェクト
var optionObj = {
	"enableHighAccuracy": true ,
	"timeout": 1000000 ,
	"maximumAge": 0 ,
} ;

// 現在位置を取得する
navigator.geolocation.watchPosition( successFunc , errorFunc , optionObj ) ;
}
// Geolocation APIに対応していない
else
{
	// 現在位置を取得できない場合の処理
	alert( "あなたの端末では、現在位置を取得できません。" ) ;
}
</script>
</body>
</html>